// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`refractor plugins normalize-parameters given parameters are defined in Path Item Object and Operation Object defines additional parameter should merge with all Path Item parameters 1`] = `
(OpenApi3_1Element
  (MemberElement
    (StringElement)
    (OpenapiElement))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (PathItemElement
          (MemberElement
            (StringElement)
            (ArrayElement
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))))
          (MemberElement
            (StringElement)
            (OperationElement
              (MemberElement
                (StringElement)
                (ArrayElement
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))))))))))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (ArrayElement
          (StringElement))))))
`;

exports[`refractor plugins normalize-parameters given parameters are defined in Path Item Object and Operation Object defines identical parameter should replace Path Item parameter 1`] = `
{
  "element": "openApi3_1",
  "meta": {
    "classes": {
      "element": "array",
      "content": [
        {
          "element": "string",
          "content": "api"
        },
        {
          "element": "string",
          "content": "result"
        }
      ]
    }
  },
  "content": [
    {
      "element": "member",
      "meta": {
        "classes": {
          "element": "array",
          "content": [
            {
              "element": "string",
              "content": "fixed-field"
            }
          ]
        }
      },
      "content": {
        "key": {
          "element": "string",
          "content": "openapi"
        },
        "value": {
          "element": "openapi",
          "meta": {
            "classes": {
              "element": "array",
              "content": [
                {
                  "element": "string",
                  "content": "spec-version"
                },
                {
                  "element": "string",
                  "content": "version"
                }
              ]
            }
          },
          "content": "3.1.0"
        }
      }
    },
    {
      "element": "member",
      "meta": {
        "classes": {
          "element": "array",
          "content": [
            {
              "element": "string",
              "content": "fixed-field"
            }
          ]
        }
      },
      "content": {
        "key": {
          "element": "string",
          "content": "webhooks"
        },
        "value": {
          "element": "object",
          "meta": {
            "classes": {
              "element": "array",
              "content": [
                {
                  "element": "string",
                  "content": "webhooks"
                }
              ]
            }
          },
          "content": [
            {
              "element": "member",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "patterned-field"
                    }
                  ]
                }
              },
              "content": {
                "key": {
                  "element": "string",
                  "content": "hook1"
                },
                "value": {
                  "element": "pathItem",
                  "meta": {
                    "webhook-name": {
                      "element": "string",
                      "content": "hook1"
                    }
                  },
                  "content": [
                    {
                      "element": "member",
                      "meta": {
                        "classes": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string",
                              "content": "fixed-field"
                            }
                          ]
                        }
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "parameters"
                        },
                        "value": {
                          "element": "array",
                          "meta": {
                            "classes": {
                              "element": "array",
                              "content": [
                                {
                                  "element": "string",
                                  "content": "path-item-parameters"
                                },
                                {
                                  "element": "string",
                                  "content": "parameters"
                                }
                              ]
                            }
                          },
                          "content": [
                            {
                              "element": "parameter",
                              "content": [
                                {
                                  "element": "member",
                                  "meta": {
                                    "classes": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "string",
                                          "content": "fixed-field"
                                        }
                                      ]
                                    }
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "name"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "param1"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "meta": {
                                    "classes": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "string",
                                          "content": "fixed-field"
                                        }
                                      ]
                                    }
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "in"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "query"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "element": "parameter",
                              "content": [
                                {
                                  "element": "member",
                                  "meta": {
                                    "classes": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "string",
                                          "content": "fixed-field"
                                        }
                                      ]
                                    }
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "name"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "param2"
                                    }
                                  }
                                },
                                {
                                  "element": "member",
                                  "meta": {
                                    "classes": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "string",
                                          "content": "fixed-field"
                                        }
                                      ]
                                    }
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "in"
                                    },
                                    "value": {
                                      "element": "string",
                                      "content": "query"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "element": "member",
                      "meta": {
                        "classes": {
                          "element": "array",
                          "content": [
                            {
                              "element": "string",
                              "content": "fixed-field"
                            }
                          ]
                        }
                      },
                      "content": {
                        "key": {
                          "element": "string",
                          "content": "get"
                        },
                        "value": {
                          "element": "operation",
                          "meta": {
                            "http-method": {
                              "element": "string",
                              "content": "GET"
                            }
                          },
                          "content": [
                            {
                              "element": "member",
                              "meta": {
                                "classes": {
                                  "element": "array",
                                  "content": [
                                    {
                                      "element": "string",
                                      "content": "fixed-field"
                                    }
                                  ]
                                }
                              },
                              "content": {
                                "key": {
                                  "element": "string",
                                  "content": "parameters"
                                },
                                "value": {
                                  "element": "array",
                                  "meta": {
                                    "classes": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "string",
                                          "content": "operation-parameters"
                                        },
                                        {
                                          "element": "string",
                                          "content": "parameters"
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "parameter",
                                      "content": [
                                        {
                                          "element": "member",
                                          "meta": {
                                            "classes": {
                                              "element": "array",
                                              "content": [
                                                {
                                                  "element": "string",
                                                  "content": "fixed-field"
                                                }
                                              ]
                                            }
                                          },
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "name"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "param1"
                                            }
                                          }
                                        },
                                        {
                                          "element": "member",
                                          "meta": {
                                            "classes": {
                                              "element": "array",
                                              "content": [
                                                {
                                                  "element": "string",
                                                  "content": "fixed-field"
                                                }
                                              ]
                                            }
                                          },
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "in"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "query"
                                            }
                                          }
                                        },
                                        {
                                          "element": "member",
                                          "meta": {
                                            "classes": {
                                              "element": "array",
                                              "content": [
                                                {
                                                  "element": "string",
                                                  "content": "fixed-field"
                                                }
                                              ]
                                            }
                                          },
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "description"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "operation parameter"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "element": "parameter",
                                      "content": [
                                        {
                                          "element": "member",
                                          "meta": {
                                            "classes": {
                                              "element": "array",
                                              "content": [
                                                {
                                                  "element": "string",
                                                  "content": "fixed-field"
                                                }
                                              ]
                                            }
                                          },
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "name"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "param2"
                                            }
                                          }
                                        },
                                        {
                                          "element": "member",
                                          "meta": {
                                            "classes": {
                                              "element": "array",
                                              "content": [
                                                {
                                                  "element": "string",
                                                  "content": "fixed-field"
                                                }
                                              ]
                                            }
                                          },
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "in"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "query"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "element": "member",
      "content": {
        "key": {
          "element": "string",
          "content": "x-normalized"
        },
        "value": {
          "element": "object",
          "content": [
            {
              "element": "member",
              "content": {
                "key": {
                  "element": "string",
                  "content": "parameters"
                },
                "value": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "/webhooks/hook1/get"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  ]
}
`;

exports[`refractor plugins normalize-parameters given parameters are defined in Path Item Object and Operation Object doesn't define any parameters should inherit all Path Item parameters 1`] = `
(OpenApi3_1Element
  (MemberElement
    (StringElement)
    (OpenapiElement))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (PathItemElement
          (MemberElement
            (StringElement)
            (ArrayElement
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))))
          (MemberElement
            (StringElement)
            (OperationElement
              (MemberElement
                (StringElement)
                (ArrayElement
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))))))))))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (ArrayElement
          (StringElement))))))
`;

exports[`refractor plugins normalize-parameters given parameters are defined in Path Item Object and Operation Object doesn't defines empty parameters should inherit all Path Item parameters 1`] = `
(OpenApi3_1Element
  (MemberElement
    (StringElement)
    (OpenapiElement))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (PathItemElement
          (MemberElement
            (StringElement)
            (ArrayElement
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))
              (ParameterElement
                (MemberElement
                  (StringElement)
                  (StringElement))
                (MemberElement
                  (StringElement)
                  (StringElement)))))
          (MemberElement
            (StringElement)
            (OperationElement
              (MemberElement
                (StringElement)
                (ArrayElement
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))
                  (ParameterElement
                    (MemberElement
                      (StringElement)
                      (StringElement))
                    (MemberElement
                      (StringElement)
                      (StringElement)))))))))))
  (MemberElement
    (StringElement)
    (ObjectElement
      (MemberElement
        (StringElement)
        (ArrayElement
          (StringElement))))))
`;
