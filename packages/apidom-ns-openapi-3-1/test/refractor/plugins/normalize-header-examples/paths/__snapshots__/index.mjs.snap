// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`refractor plugins normalize-header-examples given Header Object defines both example and examples field and Schema Object defines both example and examples fields should override both Schema Object example and examples fields 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 4,
                examples: Object {
                  example1: Object {
                    value: 3,
                  },
                },
                schema: Object {
                  example: 3,
                  examples: Array [
                    3,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines both example and examples field and Schema Object defines example field should override Schema Object example field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 3,
                examples: Object {
                  example1: Object {
                    value: 2,
                  },
                },
                schema: Object {
                  example: 2,
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines both example and examples field and Schema Object defines examples field should override Schema Object examples field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 3,
                examples: Object {
                  example1: Object {
                    value: 2,
                  },
                },
                schema: Object {
                  examples: Array [
                    2,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines example field and Schema Object defines both example and examples fields should override both Schema Object example and examples fields 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 3,
                schema: Object {
                  example: 3,
                  examples: Array [
                    3,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines example field and Schema Object defines example field should override Schema Object example field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 2,
                schema: Object {
                  example: 2,
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines example field and Schema Object defines examples field should override Schema Object examples field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                example: 2,
                schema: Object {
                  examples: Array [
                    2,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines examples field and Schema Object defines both example and examples fields should override both Schema Object example and examples fields 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                examples: Object {
                  example1: Object {
                    value: 3,
                  },
                },
                schema: Object {
                  example: 3,
                  examples: Array [
                    3,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines examples field and Schema Object defines example field should override Schema Object example field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                examples: Object {
                  example1: Object {
                    value: 2,
                  },
                },
                schema: Object {
                  example: 2,
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;

exports[`refractor plugins normalize-header-examples given Header Object defines examples field and Schema Object defines examples field should override Schema Object examples field 1`] = `
Object {
  openapi: 3.1.0,
  paths: Object {
    /: Object {
      get: Object {
        responses: Object {
          200: Object {
            headers: Object {
              content-type: Object {
                examples: Object {
                  example1: Object {
                    value: 2,
                  },
                },
                schema: Object {
                  examples: Array [
                    2,
                  ],
                  type: number,
                },
              },
            },
          },
        },
      },
    },
  },
  x-normalized: Object {
    header-examples: Array [
      /paths/~1/get/responses/200/headers/content-type,
    ],
  },
}
`;
