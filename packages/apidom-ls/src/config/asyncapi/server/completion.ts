import {
  ApidomCompletionItem,
  CompletionFormat,
  CompletionType,
} from '../../../apidom-language-types';

const completion: ApidomCompletionItem[] = [
  {
    label: 'url',
    insertText: 'url',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '**REQUIRED**. A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.',
    },
  },
  {
    label: 'protocol',
    insertText: 'protocol',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '**REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.',
    },
  },
  {
    label: 'protocolVersion',
    insertText: 'protocolVersion',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        'The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.',
    },
  },
  {
    label: 'description',
    insertText: 'description',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        'An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) **MAY** be used for rich text representation.',
    },
  },
  {
    label: 'variables',
    insertText: 'variables',
    kind: 14,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        "Map[`string`, [Server Variable Object](https://www.asyncapi.com/docs/specifications/v2.3.0#serverVariableObject)]\n\\\n\\\nA map between a variable name and its value.  The value is used for substitution in the server's URL template.",
    },
  },
  {
    label: 'security',
    insertText: 'security',
    kind: 14,
    format: CompletionFormat.ARRAY,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[[Security Requirement Object](https://www.asyncapi.com/docs/specifications/v2.3.0#securityRequirementObject)]\n\\\n\\\nA declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.',
    },
  },
  {
    label: 'bindings',
    insertText: 'bindings',
    kind: 14,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[Server Bindings Object](https://www.asyncapi.com/docs/specifications/v2.3.0#serverBindingsObject) \\| [Reference Object](https://www.asyncapi.com/docs/specifications/v2.3.0#referenceObject)\n\\\n\\\nA map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.',
    },
  },
  {
    target: 'protocol',
    label: 'amqp',
    insertText: 'amqp',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'amqps',
    insertText: 'amqps',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'http',
    insertText: 'http',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'https',
    insertText: 'https',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'ibmmq',
    insertText: 'ibmmq',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'jms',
    insertText: 'jms',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'kafka',
    insertText: 'kafka',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'kafka-secure',
    insertText: 'kafka-secure',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'anypointmq',
    insertText: 'anypointmq',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'mqtt',
    insertText: 'mqtt',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'secure-mqtt',
    insertText: 'secure-mqtt',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'solace',
    insertText: 'solace',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'stomp',
    insertText: 'stomp',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'stomps',
    insertText: 'stomps',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'ws',
    insertText: 'ws',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'wss',
    insertText: 'wss',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocol',
    label: 'mercure',
    insertText: 'mercure',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
  },
  {
    target: 'protocolVersion',
    label: '3.0.0',
    insertText: '3.0.0',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'protocolVersion',
    label: '2.8.1',
    insertText: '2.8.1',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'protocolVersion',
    label: '2.8.0',
    insertText: '2.8.0',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'protocolVersion',
    label: '2.7.2',
    insertText: '2.7.2',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'protocolVersion',
    label: '2.7.1',
    insertText: '2.7.1',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'protocolVersion',
    label: '2.7.0',
    insertText: '2.7.0',
    kind: 12,
    format: CompletionFormat.QUOTED,
    type: CompletionType.VALUE,
    insertTextFormat: 2,
    conditions: [
      {
        targets: [{ path: 'protocol' }],
        function: 'apilintContainsValue',
        params: ['kafka'],
      },
    ],
  },
  {
    target: 'security',
    label: 'security',
    insertText: '?',
    arrayMember: true,
    kind: 12,
    format: CompletionFormat.ARRAY_OBJECT,
    type: CompletionType.PROPERTY,
    function: 'apicompleteSecurity',
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'http',
    insertText: 'http',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'ws',
    insertText: 'ws',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'kafka',
    insertText: 'kafka',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'anypointmq',
    insertText: 'anypointmq',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'amqp',
    insertText: 'amqp',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'amqp1',
    insertText: 'amqp1',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'mqtt',
    insertText: 'mqtt',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'mqtt5',
    insertText: 'mqtt5',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'nats',
    insertText: 'nats',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'jms',
    insertText: 'jms',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'sns',
    insertText: 'sns',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'solace',
    insertText: 'solace',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'sqs',
    insertText: 'sqs',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'stomps',
    insertText: 'stomps',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'redis',
    insertText: 'redis',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'mercure',
    insertText: 'mercure',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'ibmmq',
    insertText: 'ibmmq',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
];

export default completion;
