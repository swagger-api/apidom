const documentation = [
  {
    target: 'type',
    docs: '**REQUIRED**. The type of the security scheme. Valid values are `"userPassword"`, `"apiKey"`, `"X509"`, `"symmetricEncryption"`, `"asymmetricEncryption"`, `"httpApiKey"`, `"http"`, `"oauth2"`, `"openIdConnect"`, `"plain"`, `"scramSha256"`, `"scramSha512"`, and `"gssapi"`.',
  },
  {
    target: 'description',
    docs: 'A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.',
  },
  {
    target: 'name',
    docs: 'Applies to `httpApiKey` type. **REQUIRED**. The name of the header, query or cookie parameter to be used.',
  },
  {
    target: 'in',
    docs: 'Applies to `apiKey` or `httpApiKey` type. **REQUIRED**. The location of the API key. Valid values are `"user"` and `"password"` for `apiKey` and `"query"`, `"header"` or `"cookie"` for `httpApiKey`.',
  },
  {
    target: 'scheme',
    docs: 'Applies to `http` type. **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).',
  },
  {
    target: 'bearerFormat',
    docs: 'Applies to `http` (`"bearer"`) type. A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.',
  },
  {
    target: 'flows',
    docs: '#### [OAuth Flows Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowsObject)\n\nApplies to `oauth2` type. Allows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\nimplicit| [OAuth Flow Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowObject) | Configuration for the OAuth Implicit flow\npassword| [OAuth Flow Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\nclientCredentials| [OAuth Flow Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\nauthorizationCode| [OAuth Flow Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](https://www.asyncapi.com/docs/reference/specification/v2.4.0#specificationExtensions).',
  },
  {
    target: 'openIdConnectUrl',
    docs: 'Applies to `openIdConnect` type. **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.',
  },
  {
    docs: '#### [Security Scheme Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#securitySchemeObject)\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2\'s common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\ntype | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `"userPassword"`, `"apiKey"`, `"X509"`, `"symmetricEncryption"`, `"asymmetricEncryption"`, `"httpApiKey"`, `"http"`, `"oauth2"`, `"openIdConnect"`, `"plain"`, `"scramSha256"`, `"scramSha512"`, and `"gssapi"`.\ndescription | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\nname | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\nin | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `"user"` and `"password"` for `apiKey` and `"query"`, `"header"` or `"cookie"` for `httpApiKey`.\nscheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\nbearerFormat | `string` | `http` (`"bearer"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\nflows | [OAuth Flows Object](https://www.asyncapi.com/docs/reference/specification/v2.4.0#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\nopenIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](https://www.asyncapi.com/docs/reference/specification/v2.4.0#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n\n\\\nJSON\n```json\n{\n  "type": "userPassword"\n}\n```\n\n\n\\\nYAML\n```yaml\ntype: userPassword\n```',
  },
];
export default documentation;
