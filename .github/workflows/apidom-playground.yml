# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ApiDOM Playground

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install monorepo dependencies
        run: npm ci
        working-directory: ./apidom
      - name: Build monorepo
        run: npm run build
        working-directory: ./apidom

      - name: Install dependencies
        run: npm ci
        working-directory: ./experiments/apidom-playground
      - name: Security audit
        # filtering production deps only supported on >=npm@6.10.0
        if: startsWith(matrix.node-version, '12') || startsWith(matrix.node-version, '14')
        run: npm run security-audit
        env:
          CI: true
        working-directory: ./experiments/apidom-playground
      - name: Lint commit message
        run: git log -1 --pretty=format:"%s" | npx commitlint
        working-directory: ./experiments/apidom-playground
      - name: Lint code
        run: npm run lint
        working-directory: ./experiments/apidom-playground
      - name: Build ApiDOM Playground
        run: npm run build
        working-directory: ./experiments/apidom-playground
      - name: Upload build artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./experiments/apidom-playground/build

  deploy:

    name: Deploy
    if: github.ref == 'refs/heads/master'

    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Download math result for job 1
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
