# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ApiDOM Playground

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.8
        uses: actions/setup-node@v2
        with:
          node-version: 16.8
      - name: Cache npm cache files
        id: cache-npm-cache-files
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('experiments/apidom-playground/package-lock.json') }}
      - name: Build ApiDOM monorepo
        run: npm ci && npm run build
        working-directory: ./apidom
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install dependencies
        run: npm ci
        working-directory: ./experiments/apidom-playground
      - name: Security audit
        run: npm run security-audit
        env:
          CI: true
        working-directory: ./experiments/apidom-playground
      - name: Lint code
        run: npm run lint
        working-directory: ./experiments/apidom-playground
      - name: Build ApiDOM Playground
        run: npm run build
        working-directory: ./experiments/apidom-playground
      - name: Upload build artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./experiments/apidom-playground/build

  deploy:

    name: Deploy
    if: github.ref == 'refs/heads/master'

    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Download math result for job 1
        uses: actions/download-artifact@v2
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
