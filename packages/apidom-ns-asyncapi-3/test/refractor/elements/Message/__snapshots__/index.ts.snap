// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`refractor elements MessageElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (ArrayElement
      (MessageExampleElement
        (MemberElement
          (StringElement)
          (ObjectElement))
        (MemberElement
          (StringElement)
          (ObjectElement))
        (MemberElement
          (StringElement)
          (StringElement))
        (MemberElement
          (StringElement)
          (StringElement))))))
`;

exports[`refractor elements given bindings field of type MessageBindingsElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (MessageBindingsElement)))
`;

exports[`refractor elements given bindings field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements given correlationId field of type CorrelationIDElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (CorrelationIDElement)))
`;

exports[`refractor elements given correlationId field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements given externalDocs field of type ExternalDocumentationElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ExternalDocumentationElement)))
`;

exports[`refractor elements given externalDocs field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements given headers field of type MultiFormatSchemaElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (MultiFormatSchemaElement
      (MemberElement
        (StringElement)
        (StringElement))
      (MemberElement
        (StringElement)
        (SchemaElement)))))
`;

exports[`refractor elements given headers field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements given headers field of type SchemaElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (SchemaElement)))
`;

exports[`refractor elements given payload field of other type should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (BooleanElement)))
`;

exports[`refractor elements given payload field of type MultiFormatSchemaElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (MultiFormatSchemaElement
      (MemberElement
        (StringElement)
        (StringElement))
      (MemberElement
        (StringElement)
        (SchemaElement)))))
`;

exports[`refractor elements given payload field of type ReferenceElement should refract payload to ReferenceElement 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements given payload field of type SchemaElement should refract payload to SchemaElement 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (SchemaElement)))
`;

exports[`refractor elements given tags field contains list of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (TagsElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement))))))
`;

exports[`refractor elements given tags field contains list of type TagElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (TagsElement
      (TagElement))))
`;

exports[`refractor elements given traits field contains list of type MessageTraitElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (MessageTraitElement))))
`;

exports[`refractor elements given traits field contains list of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(MessageElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement))))))
`;
