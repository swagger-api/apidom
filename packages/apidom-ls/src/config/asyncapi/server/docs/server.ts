const serverDocs = [
  {
    target: 'url',
    docs: '**REQUIRED**. A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`brackets`}`.',
  },
  {
    target: 'protocol',
    docs: '**REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.',
  },
  {
    target: 'protocolVersion',
    docs: 'The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.',
  },
  {
    target: 'description',
    docs: 'An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) **MAY** be used for rich text representation.',
  },
  {
    target: 'variables',
    docs: "Map[`string`, [Server Variable Object](https://www.asyncapi.com/docs/specifications/v2.2.0#serverVariableObject)]\n\n ---- \n\nA map between a variable name and its value. The value is used for substitution in the server's URL template.",
  },
  {
    target: 'security',
    docs: '[[Security Requirement Object](https://www.asyncapi.com/docs/specifications/v2.2.0#securityRequirementObject)]\n\n ---- \n\nA declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.',
  },
  {
    target: 'bindings',
    docs: '[Server Bindings Object](https://www.asyncapi.com/docs/specifications/v2.2.0#serverBindingsObject) | [Reference Object](https://www.asyncapi.com/docs/specifications/v2.2.0#referenceObject)\n\n ---- \n\nA map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\n ---- \n\nThis object **MAY** be extended with [Specification Extensions](https://www.asyncapi.com/docs/specifications/v2.2.0#specificationExtensions).',
  },
  {
    docs: '#### Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\nurl | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`brackets`}`.\nprotocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `jms`, `kafka`, `kafka-secure`, `mqtt`, `secure-mqtt`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.\nprotocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\ndescription | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](http://spec.commonmark.org/) MAY be used for rich text representation.\nvariables | Map[`string`, [Server Variable Object](https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server\'s URL template.\nsecurity | [[Security Requirement Object](https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\nbindings | [Server Bindings Object](https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md#serverBindingsObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  "url": "development.gigantic-server.com",\n  "description": "Development server",\n  "protocol": "kafka",\n  "protocolVersion": "1.0.0"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: \'1.0.0\'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object\'s [`servers`](https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md#A2SServers):\n\n```json\n{\n  "servers": {\n    "development": {\n      "url": "development.gigantic-server.com",\n      "description": "Development server",\n      "protocol": "amqp",\n      "protocolVersion": "0.9.1"\n    },\n    "staging": {\n      "url": "staging.gigantic-server.com",\n      "description": "Staging server",\n      "protocol": "amqp",\n      "protocolVersion": "0.9.1"\n    },\n    "production": {\n      "url": "api.gigantic-server.com",\n      "description": "Production server",\n      "protocol": "amqp",\n      "protocolVersion": "0.9.1"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  "servers": {\n    "production": {\n      "url": "{username}.gigantic-server.com:{port}/{basePath}",\n      "description": "The production API server",\n      "protocol": "secure-mqtt",\n      "variables": {\n        "username": {\n          "default": "demo",\n          "description": "This value is assigned by the service provider, in this example `gigantic-server.com`"\n        },\n        "port": {\n          "enum": [\n            "8883",\n            "8884"\n          ],\n          "default": "8883"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: \'{username}.gigantic-server.com:{port}/{basePath}\'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - \'8883\'\n          - \'8884\'\n        default: \'8883\'\n```\n\n\n#### Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n',
  },
];
export default serverDocs;
