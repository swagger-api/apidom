import {
  ApidomCompletionItem,
  CompletionFormat,
  CompletionType,
} from '../../../../apidom-language-types';

const operationComplete: ApidomCompletionItem[] = [
  {
    label: 'operationId',
    insertText: 'operationId',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        'Unique string used to identify the operation. The id **MUST** be unique among all operations described in the API. The operationId value is **case-sensitive**.\n\n ----\n\nTools and libraries **MAY** use the operationId to uniquely identify an operation, therefore, it is **RECOMMENDED** to follow common programming naming conventions.',
    },
  },
  {
    label: 'summary',
    insertText: 'summary',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value: 'A short summary of what the operation is about.',
    },
  },
  {
    label: 'description',
    insertText: 'description',
    kind: 14,
    format: CompletionFormat.QUOTED,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        'A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.',
    },
  },
  {
    label: 'tags',
    insertText: 'tags',
    kind: 14,
    format: CompletionFormat.ARRAY,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        'A list of tags for API documentation control. Tags can be used for logical grouping of operations.',
    },
  },
  {
    label: 'externalDocs',
    insertText: 'externalDocs',
    kind: 14,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[External Documentation Object](https://www.asyncapi.com/docs/specifications/v2.2.0#externalDocumentationObject)\n\n ---- \n\nAdditional external documentation for this operation..',
    },
  },
  {
    label: 'bindings',
    insertText: 'bindings',
    kind: 14,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[Operation Bindings Object](https://www.asyncapi.com/docs/specifications/v2.2.0#operationBindingsObject) | [Reference Object](https://www.asyncapi.com/docs/specifications/v2.2.0#referenceObject)\n\n ---- \n\nA map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\n ---- \n\nThis object can be extended with [Specification Extensions](https://www.asyncapi.com/docs/specifications/v2.2.0#specificationExtensions).',
    },
  },
  {
    target: 'bindings',
    label: 'amqp',
    insertText: 'amqp',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'amqps',
    insertText: 'amqps',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'http',
    insertText: 'http',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'https',
    insertText: 'https',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'ibmmq',
    insertText: 'ibmmq',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'jms',
    insertText: 'jms',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'kafka',
    insertText: 'kafka',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'kafka-secure',
    insertText: 'kafka-secure',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'anypointmq',
    insertText: 'anypointmq',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'mqtt',
    insertText: 'mqtt',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'secure-mqtt',
    insertText: 'secure-mqtt',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'stomp',
    insertText: 'stomp',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'stomps',
    insertText: 'stomps',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'ws',
    insertText: 'ws',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'wss',
    insertText: 'wss',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    target: 'bindings',
    label: 'mercure',
    insertText: 'mercure',
    kind: 12,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
  },
  {
    label: 'traits',
    insertText: 'traits',
    kind: 14,
    format: CompletionFormat.ARRAY,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[[Operation Trait Object](https://www.asyncapi.com/docs/specifications/v2.2.0#operationTraitObject) | [Reference Object](https://www.asyncapi.com/docs/specifications/v2.2.0#referenceObject) ]\n\n ---- \n\nA list of traits to apply to the operation object. Traits **MUST** be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.',
    },
  },
  {
    label: 'message',
    insertText: 'message',
    kind: 14,
    format: CompletionFormat.OBJECT,
    type: CompletionType.PROPERTY,
    insertTextFormat: 2,
    documentation: {
      kind: 'markdown',
      value:
        '[[Message Object](https://www.asyncapi.com/docs/specifications/v2.2.0#messageObject) | [Reference Object](https://www.asyncapi.com/docs/specifications/v2.2.0#referenceObject)]\n\n ---- \n\nA definition of the message that will be published or received on this channel. `oneOf` is allowed here to specify multiple messages, however, **a message MUST be valid only against one of the referenced message objects.**\n\n ---- \n\nThis object can be extended with [Specification Extensions](https://www.asyncapi.com/docs/specifications/v2.2.0#specificationExtensions).',
    },
  },
];

export default operationComplete;
