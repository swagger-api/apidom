// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`refractor elements OperationElement given bindings field of type OperationBindingsElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (OperationBindingsElement)))
`;

exports[`refractor elements OperationElement given bindings field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements OperationElement given externalDocs field of type ExternalDocumentationElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ExternalDocumentationElement)))
`;

exports[`refractor elements OperationElement given externalDocs field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements OperationElement given reply field of type OperationReplyElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (OperationReplyElement)))
`;

exports[`refractor elements OperationElement given reply field of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;

exports[`refractor elements OperationElement given security field contains list of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement))))))
`;

exports[`refractor elements OperationElement given security field contains list of type SecuritySchemeElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (SecuritySchemeElement
        (MemberElement
          (StringElement)
          (ArrayElement))))))
`;

exports[`refractor elements OperationElement given tags field contains list of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (TagsElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement))))))
`;

exports[`refractor elements OperationElement given tags field contains list of type TagElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (TagsElement
      (TagElement))))
`;

exports[`refractor elements OperationElement given traits field contains list of type OperationTraitElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (OperationTraitElement))))
`;

exports[`refractor elements OperationElement given traits field contains list of type ReferenceElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (ArrayElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement))))))
`;

exports[`refractor elements OperationElement should refract to semantic ApiDOM tree 1`] = `
(OperationElement
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (StringElement))
  (MemberElement
    (StringElement)
    (ArrayElement
      (ReferenceElement
        (MemberElement
          (StringElement)
          (StringElement)))))
  (MemberElement
    (StringElement)
    (ReferenceElement
      (MemberElement
        (StringElement)
        (StringElement)))))
`;
